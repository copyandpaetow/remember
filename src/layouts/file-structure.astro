---
import { getCollection } from "astro:content";
import { sumTags } from "@content/sum-tags";
import { tagToUrl, removeNestedFolder } from "@content/transform-tags";
import NestedFolders from "./folder-structure.astro";
import type { Folders } from "@content/types";

interface Props {
  currentTag?: string;
  currentSlug?: string;
}

const { currentTag = "", currentSlug } = Astro.props;

const content = await getCollection("articles");
const entriesPerTag = content.reduce(sumTags, {});

const mostRecentPosts = content
  .toSorted(
    (a, b) => b.data.creationDate.getTime() - a.data.creationDate.getTime()
  )
  .slice(0, 2);

const mostRecentUpdate = content
  .filter((post) => post.data.updateDate)
  .toSorted(
    (a, b) => b.data.updateDate!.getTime() - a.data.updateDate!.getTime()
  )
  .slice(0, 2);

const folders = Object.entries(entriesPerTag).reduce(
  (accumulator, [tag, entries]) => {
    if (!tag.includes("/")) {
      accumulator[tag] = entries;
      return accumulator;
    }

    let reference = accumulator;
    tag.split("/").forEach((folder, index, array) => {
      if (index === array.length - 1) {
        reference[folder] = entries;
        return;
      }

      reference[folder] ??= {};
      //@ts-expect-error
      reference = reference[folder];
    });
    return accumulator;
  },
  {} as Folders | Record<string, Folders>
);

//todo: add search
//todo: add folders
//todo: make columns responsive
//todo: the sidebar needs to be collapsible as well on interaction. Maybe even with a param to facilitate a better reading experience
//todo: we might also think about an inpage nav (maybe sticky on top)? We cant fit another column
//todo: recreate bears reference functionality => [^1] is displayed as a <sup>1<sup> and on click it scrolls the page to the bottom where the content block with another [^1] is, while also highlighting it on yellow briefly
---

<body>
  <nav>
    <h1>Content</h1>
    <details>
      <summary>most recent</summary>
      <ul>
        {
          mostRecentPosts.map((recentPost) => (
            <li>
              <a
                href={`/${tagToUrl(recentPost.data.tags[0])}/${removeNestedFolder(recentPost.slug)}`}
              >
                {recentPost.data.title}
              </a>
            </li>
          ))
        }
      </ul>
    </details>
    {
      mostRecentUpdate.length > 0 && (
        <details>
          <summary>recently updated</summary>
          <ul>
            {mostRecentUpdate.map((recentPost) => (
              <li>
                <a
                  href={`/${tagToUrl(recentPost.data.tags[0])}/${removeNestedFolder(recentPost.slug)}`}
                >
                  {recentPost.data.title}
                </a>
              </li>
            ))}
          </ul>
        </details>
      )
    }

    <NestedFolders
      folders={folders}
      currentTag={currentTag}
      level={0}
      name="tags"
    />
  </nav>
  {
    entriesPerTag[currentTag]?.length > 0 && (
      <nav aria-label="secondary">
        <ul>
          {entriesPerTag[currentTag].map((entry) => (
            <li>
              <a
                href={`/${tagToUrl(removeNestedFolder(currentTag))}/${removeNestedFolder(entry.slug)}`}
                aria-current={entry.slug === currentSlug}
              >
                <h3>{entry.data.title}</h3>
                <p>{entry.data.description}</p>
              </a>
            </li>
          ))}
        </ul>
      </nav>
    )
  }

  <main>
    <slot />
  </main>
</body>

<style>
  nav {
    padding: 2em;
    border-inline-end: 2px solid black;
  }

  main {
    padding: 2em;
  }

  body {
    display: grid;
    grid-template-columns: max-content minmax(12em, 1fr) 4fr;
    grid-auto-flow: column;
  }
</style>
